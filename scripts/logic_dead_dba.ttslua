-- logic that is specific for DBA and cannot be reused in
-- Triumph! 

-- Return the number points that are in the dead zone for DBA
function calculate_dead_zone_value_dba(zone)
    local dead = 0
    local has_double_element = false
    for _,obj in ipairs(zone.getObjects()) do
        local obj_name = obj.getName()
        print_debug('Name is <' .. obj_name .. '>')
        if str_has_substr(obj_name, 'base') then
            if not (str_has_substr(obj_name, 'Hd')
                    or str_has_substr(obj_name, 'SCh')) then
                dead = dead + 1
            end

            if str_has_substr(obj_name, '6Kn')
               or str_has_substr(obj_name, '6Cv')
               or str_has_substr(obj_name, '8Sp')
               or str_has_substr(obj_name, '6Bd')
               or str_has_substr(obj_name, '8Bw')
               or str_has_substr(obj_name, '8Lb')
               or str_has_substr(obj_name, '8Cb') then
                has_double_element = true
            end

            if str_has_substr(obj_name, 'Gen') then
                -- Generals count as one extra element lost
                dead = dead + 1
            end
        end
    end

    -- The first double element counts as one additional death
    if has_double_element then
        dead = dead + 1
    end
    return dead
 end

 -- Is the number of dead considered low
function is_nb_dead_low_dba(dead)
    return (dead >= 1) and (dead <= 2)
end

-- Is the number of dead considered moderate
function is_nb_dead_moderate_dba(dead)
    return (dead == 3)
end

-- Is the number of dead considered high
function is_nb_dead_high_dba(dead)
    return (dead == 4)
end


-- Specializations for DBA
calculate_dead_zone_value = calculate_dead_zone_value_dba
is_nb_dead_low = is_nb_dead_low_dba
is_nb_dead_moderate = is_nb_dead_moderate_dba
is_nb_dead_high = is_nb_dead_high_dba


