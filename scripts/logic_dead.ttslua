
function spawn_dead_zones()
    delete_all_dead_zones()
    Wait.frames(function()
        spawn_dead_zones_after_deletion()
    end, 1)
end

function delete_all_dead_zones()
    local all_objs = getAllObjects()
    for _,obj in ipairs(all_objs) do
        local name = obj.getName()
        if str_starts_with(name, 'dead zone') then
            -- This executes on next frame
            obj.destroy()
        end
        if str_starts_with(name, 'Army Builder') then
            -- This executes on next frame
            obj.destroy()
        end
    end
end

function create_zone(name, position, size)
    local zone_spawn = {
        position = position,
        scale = size,
        type = 'ScriptingTrigger',
        callback = 'callback_zone'
    }
    local obj = spawnObject(zone_spawn)
    obj.setName(name)
end

function spawn_dead_zones_after_deletion()
    create_zone('dead zone red',
                { x = 0, y = 1.6, z = -27 },
                { x = 10, y = 1, z = 10 })
    create_zone('dead zone blue',
                { x = 0, y = 1.6, z = 27 },
                { x = 10, y = 1, z = 10 })
    create_zone('Army Builder red',
                { x = 75, y = 1.6, z = -25 },
                { x = 10, y = 1, z = 10 })     
    create_zone('Army Builder blue',
                { x = 75, y = 1.6, z = 25 },
                { x = 10, y = 1, z = 10 })    
end


local g_updating_zone = {}


function update_zone_value(zone)
    local name = zone.getName()
     if not str_has_substr(name, 'dead') then
        return
    end

    if str_has_substr(name, 'red') then
        is_red = true
    end

    local dead = calculate_dead_zone_value(zone)

    local text_id = 'text_dead_'
    local image_id = 'dead_'
    local image_suffix = ''
    if is_red then
        text_id = text_id .. 'red'
        image_id = image_id .. 'red'
        image_suffix = 'r'
    else
        text_id = text_id .. 'blue'
        image_id = image_id .. 'blue'
        image_suffix = 'b'
    end
    UI.setValue(text_id, dead)
    UI.hide(text_id)
    Wait.frames(function ()
        UI.show(text_id)
    end, 1)
    if dead == 0 then
        UI.setAttribute(image_id, 'image', 'skeleton0' .. image_suffix)
    elseif is_nb_dead_low(dead) then
        UI.setAttribute(image_id, 'image', 'skeleton1' .. image_suffix)
    elseif is_nb_dead_moderate(dead) then
        UI.setAttribute(image_id, 'image', 'skeleton2' .. image_suffix)
    elseif is_nb_dead_high(dead) then
        UI.setAttribute(image_id, 'image', 'skeleton3' .. image_suffix)
    else
        UI.setAttribute(image_id, 'image', 'skeleton4' .. image_suffix)
    end
    print_debug('Updated dead zone ' .. zone.getName())
    g_updating_zone[zone.getName()] = false
end

function update_armyzone_value(zone)
    local name = zone.getName()
    local is_red = false
    if str_has_substr(name, 'dead') then
        return
    end
    if str_has_substr(name, 'red') then
        is_red = true
    end

    local armyvalue = 0
    local has_double_element = false
    for _,obj in ipairs(zone.getObjects()) do
        local obj_name = obj.getName()
        print_debug('Name is <' .. obj_name .. '>')
        if str_has_substr(obj_name, 'base') then
                armyvalue = armyvalue + 3

            if str_has_substr(obj_name, 'Bow Levy')
               or str_has_substr(obj_name, 'Horde')
               or str_has_substr(obj_name, 'Rabble') then
                armyvalue = armyvalue - 1
            end

            if str_has_substr(obj_name, 'Archers')
               or str_has_substr(obj_name, 'Elite Foot')
               or str_has_substr(obj_name, 'Pavisiers')
               or str_has_substr(obj_name, 'Raiders')
               or str_has_substr(obj_name, 'Spears')
               or str_has_substr(obj_name, 'Cataphracts')
               or str_has_substr(obj_name, 'Chariots') 
               or str_has_substr(obj_name, 'Elephants')
               or str_has_substr(obj_name, 'Elite Cavalry')
               or str_has_substr(obj_name, 'HorseBow')
               or str_has_substr(obj_name, 'Javelin Cavalry')
               or str_has_substr(obj_name, 'Knights')then
                armyvalue = armyvalue + 1
            end

            if str_has_substr(obj_name, 'Fortified') then
                armyvalue = armyvalue - 2
            end

            if str_has_substr(obj_name, 'Herds') then
                armyvalue = armyvalue - 2
            end

            if str_has_substr(obj_name, 'Plaustrella')
               or str_has_substr(obj_name, 'Shower Shooting') then
                armyvalue = armyvalue -2
            end

            if str_has_substr(obj_name, 'Charging Camelry') then
                armyvalue = armyvalue - 4
            end

            if str_has_substr(obj_name, 'Sword Fighting') then
                armyvalue = armyvalue - 3.5
            end

        end
    end
    --local points = tostring(armyvalue)
    local all_objs = getAllObjects()
    for _,obj in ipairs(all_objs) do
        local name = obj.getName()
        if is_red then
            if str_starts_with(name, 'NumberRed ') then
                -- This executes on next frame
                obj.destroy()
            end
        else
            if str_starts_with(name, 'NumberBlue ') then
                -- This executes on next frame
                obj.destroy()
            end
        end
    end
    Wait.frames(function ()
        if is_red then
            spawn_number_red(tostring(armyvalue), { 78.2, 1.5, -20.6})
        else
            spawn_number_blue(tostring(armyvalue), { 71.3, 1.5, 20.6})
        end
    end, 1)
    print_debug('Updated army zone ' .. zone.getName())
    g_updating_zone[zone.getName()] = false
end

function callback_zone(zone, name, color)
    print_debug('Dead zone callback ' .. zone.getName())
    if not g_updating_zone[zone.getName()] then
        g_updating_zone[zone.getName()] = true
        Wait.frames(function ()
            update_zone_value(zone)
            update_armyzone_value(zone)
        end, 30)
    else
        print_debug('Ignoring dead callback because already updating')
    end
end

function onObjectEnterScriptingZone(zone, obj)
    if not str_has_substr(obj.getName(), 'base') then
        return 
    end
    print_debug(obj.getName() .. ' entered ' .. zone.getName())
    if not g_updating_zone[zone.getName()] then
        g_updating_zone[zone.getName()] = true
        Wait.frames(function ()
            update_zone_value(zone)
            update_armyzone_value(zone)
        end, 60)
    else
        print_debug('Ignoring dead Enter because already updating')
    end
end

function onObjectLeaveScriptingZone(zone, obj)
    if not str_has_substr(obj.getName(), 'base') then
        return 
    end
    print_debug(obj.getName() .. ' left ' .. zone.getName())
    if not g_updating_zone[zone.getName()] then
        g_updating_zone[zone.getName()] = true
        Wait.frames(function ()
            update_zone_value(zone)
            update_armyzone_value(zone)
        end, 60)
    else
        print_debug('Ignoring dead Leave because already updating')
    end
end